server.port=8083

spring.datasource.url=jdbc:h2:mem:SIMPSONS
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Enabling H2 Console
spring.h2.console.enabled=true

## JPA Hibernate
# Schema and data migrations will be handled by flyway
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create
# Toggle hibernate console printing
spring.jpa.show_sql=false
# Enforce literal table naming (generate table names as specified in the @Table (name=" ") annotation)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.default_schema=simpsons
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#database migration
spring.flyway.enabled=true
#spring.flyway.enabled=false
spring.flyway.placeholder-replacement=false
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=SIMPSONS
simpsons.data.clean=true

spring.mvc.locale=en_US
spring.mvc.locale-resolver=fixed
spring.messages.basename=i18n/messages

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# Logging
# Override logging levels in runtime environment.
# NOTE: Tomcat requires JVM startup parameters
# to override logging levels
# Eg. -Dlogging.level.spring=DEBUG
# The following lines will customize the file logging pattern to replace line feeds in the message
# (this is to protect against CRLF vulnerabilties)
logging.pattern.file=${simpsons.logging.pattern-crlf}
simpsons.logging.pattern-crlf=%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %replace(%msg){'[\n\r]',''}%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}
logging.level.root=INFO
logging.level.org.hibernate.SQL=INFO

#Thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# TOGGLE CACHE: none | simple | redis
spring.cache.type=none